<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright 2007-2010 Juice, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">

  <mx:Script>
    <![CDATA[
    import flare.util.Strings;

    import mx.collections.ArrayCollection;
    import mx.controls.dataGridClasses.DataGridColumn;

    /**
     * A DataGrid that automatically creates columns that correspond
     * to keys in the objects in dataProvider.
     *
     * Columns are formatted automatically.
     */

    public function labelFunctionFactory(k:String):Function {
      return function(o:Object, dgc:DataGridColumn):String {
        if (o[k] is int) {
          return Strings.format("{0}", o[k]);
        } else {
          return Strings.format("{0:0.000}", o[k]);
        }
      }
    }


    //-----------------------------------
    // dataProvider
    //-----------------------------------

    /**
     * The data source for the DataGrid. The values in each
     * object in dataProvider are formatted appropriately.
     */
    [Bindable]
    public function set dataProvider(v:ArrayCollection):void {
      _dataProvider = v;

      if (dataProvider != null && dataProvider.length > 0) {
        var cols:Array = [];
        var o:Object = dataProvider.getItemAt(0) as Object;

        for (var k:String in o) {
          var col:DataGridColumn = new DataGridColumn(k);
          col.labelFunction = labelFunctionFactory(k);
          cols.push(col);
        }
      }
      grid.columns = cols;
    }


    public function get dataProvider():ArrayCollection {
      return _dataProvider;
    }


    private var _dataProvider:ArrayCollection = new ArrayCollection([]);
    ]]>
  </mx:Script>

  <mx:Style>
    .autoDataGrid {
      alternatingItemColors: #ffffff, #ffffff;
      headerColors: #ffffff, #ffffff;
    }
  </mx:Style>

  <mx:VBox width="100%" height="100%">
    <mx:DataGrid id="grid"
                 width="100%"
                 height="100%"
                 dataProvider="{dataProvider}"
                 styleName="autoDataGrid">
    </mx:DataGrid>
  </mx:VBox>

</mx:Canvas>
