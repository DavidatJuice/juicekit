<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                creationComplete="dataLoader.send();"
                xmlns:controls="org.juicekit.visual.controls.*"
                fontFamily="Arial"
                color="#333333"
                paddingTop="10"
                currentState="loading"
                backgroundGradientColors="[0xffffff, 0xffffff]" viewSourceURL="srcview/index.html">

  <mx:Script>
    <![CDATA[
      import flare.vis.data.DataSprite;
      import flare.vis.operator.encoder.PropertyEncoder;
      import flash.utils.setTimeout;
      import mx.collections.ArrayCollection;
      import mx.controls.Alert;
      import mx.events.DragEvent;
      import flare.vis.data.NodeSprite;
      import org.juicekit.events.DataMouseEvent;
      import org.juicekit.util.data.GraphUtil;
      import mx.rpc.http.HTTPService;
      import mx.rpc.events.ResultEvent;
      import flare.util.Strings;
      import flare.query.methods.*;
      import flare.data.converters.DelimitedTextConverter;


      private var d:Array;
      private var levelOrder:Array = ['AGE', 'SEX', 'STATE'];

      public function resultHandler(event:ResultEvent):void {
        d = new DelimitedTextConverter(',').parse(event.result as String).nodes.data;
        /*
           The data looks like this:

           STATE,SEX,AGE,POP2000,POP2008
           Alabama,M,0,30479,32055
           Alabama,M,1,29904,32321
           Alabama,M,2,30065,31789
           Alabama,M,3,29932,31371
           Alabama,M,4,30319,31164
           Alabama,M,5,31127,31049
           Alabama,M,6,31466,30960
         */
        generateTreemapData();
      }

      public function generateTreemapData():void {
        currentState = 'loading';
        treemap.data = GraphUtil.treeMap(d, levelOrder, ['POP2000', 'POP2008',
          // Percentage change in population from 2000 to 2008.
          // change = (POP2008 - POP2000) / POP2000
          {change: pctchange('POP2008', 'POP2000')}], function(o:Object):Boolean {
            return (o.AGE >= 20 && o.AGE <= 40)
          });

        treemap.addEventListener(DataMouseEvent.MOUSE_OVER, function(e:DataMouseEvent):void {
            if ((e.dataSprite as NodeSprite).childDegree == 0) {
              selectedNode.htmlText = Strings.format("<b>State:</b> {0}<br/>" + "<b>Sex:</b> {1}<br/>" + "<b>Age:</b> {2}<br/>" + "<b>Pop. in 2000:</b> {3:#,##0}<br/>" + "<b>Pop. in 2008:</b> {4:#,##0} (size)<br/>" + "<b>Change:</b> {5:0.0%} (color)", e.data.STATE, e.data.SEX, e.data.AGE, e.data.POP2000, e.data.POP2008, e.data.change);
            }
          });
        treemap.addEventListener(DataMouseEvent.MOUSE_OUT, function(e:DataMouseEvent):void {
            selectedNode.text = '';
          });
//        treemap.extraOperators = [
//          new PropertyEncoder({fillColor: 0xffffff00}, 'leaves', function(d:DataSprite) { return Math.random() < 0.1})
//        ]

        currentState = 'complete';
      }

      private function handleBtnReorder(event:DragEvent):void {
        currentState = 'loading';
        setTimeout(function():void {
            generateTreemapData()
          }, 200);
      }
    ]]>
  </mx:Script>

  <mx:HTTPService id="dataLoader"
                  url="http://media.juiceanalytics.com/census/CENSUS_STATEAGESEX.csv"
                  method="GET"
                  showBusyCursor="true"
                  result="resultHandler(event)"
                  resultFormat="text"/>
                  
  <mx:states>
    <mx:State name="loading">
      <mx:SetProperty target="{treemap}" name="visible" value="false"/>
      <mx:SetProperty target="{loadingLbl}" name="visible" value="true"/>
    </mx:State>
    <mx:State name="complete">
      <mx:SetProperty target="{treemap}" name="visible" value="true"/>
      <mx:SetProperty target="{loadingLbl}" name="visible" value="false"/>
    </mx:State>
  </mx:states>                

  <mx:VBox verticalGap="0">
    <mx:HBox>
      <mx:Label text="Population Growth by Age, Gender, and State" fontSize="18" color="#333333" fontWeight="bold"/>
      <mx:LinkButton label="Show source" click="navigateToURL(new URLRequest('srcview/index.html'), '')"/>
    </mx:HBox>
    <mx:Label text="This demo illustrates the features of the JuiceKit treemap. Source: US Census Bureau" fontSize="12" color="#666666"/>
    <mx:Spacer height="10"/>

    <mx:HBox>
      <mx:Label text="Group by (drag to reorder):"/>
      <mx:HorizontalList id="hl"
                         dataProvider="{levelOrder}"
                         dragComplete="handleBtnReorder(event)"
                         dragMoveEnabled="true"
                         dropEnabled="true"
                         dragEnabled="true"
                         width="220"
                         borderThickness="0"
                         useRollOver="false"
                         selectionColor="#ffffff">
        <mx:itemRenderer>
          <mx:Component>
            <mx:Button label="{data}" width="60" height="20"/>
          </mx:Component>
        </mx:itemRenderer>
      </mx:HorizontalList>
      <mx:Label text="Color by:"/>
      <mx:ComboBox id="colorCmb" selectedIndex="0" dataProvider="['change', 'POP2000', 'POP2008']"/>
      <mx:Label text="Size by:"/>
      <mx:ComboBox id="sizeCmb" selectedIndex="0" dataProvider="['POP2000', 'POP2008']"/>
      <mx:Label text="Color palette:"/>
      <mx:ComboBox id="paletteCmb"
                   selectedIndex="0"
                   dataProvider="['hot', 'summer', 'cool', 'Purples', 'YlGn', 'RdGy', 'PuOr']"
                   itemRenderer="PaletteRenderer"
                   dropdownWidth="200"
                   rowCount="8"/>
    </mx:HBox>
    <mx:Spacer height="10"/>

    <controls:TreeMapZoomControl tree="{treemap}" fontSize="16" color="#333333"/>
    <mx:Canvas>
      <mx:Label id="loadingLbl" text="Loading" color="#cccccc" fontSize="48"/>
      <mx:HBox width="960" id="treemapHBox">
        <controls:TreeMapControl id="treemap"
                                 width="700"
                                 height="600"
                                 transitionPeriod="1.2"
                                 palette="{paletteCmb.selectedItem}"
                                 colorEncodingField="{colorCmb.selectedItem}"
                                 sizeEncodingField="{sizeCmb.selectedItem}"
                                 styleFromDataRoot="true"
                                 fontSize="16"
                                 labelEncodingField="name"
                                 labelColorStrategy="blackwhite"
                                 truncateToFit="true"
                                 strokeColors="[0xffffff, 0xffffff, 0xffffff, 0x333333]"
                                 strokeThicknesses="[0,8,3,0.25]"/>
  
        <mx:Text id="selectedNode" text="" fontSize="14" width="250"/>
      </mx:HBox>
    </mx:Canvas>
  </mx:VBox>

</mx:Application>
